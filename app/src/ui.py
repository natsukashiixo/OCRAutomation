#I'm sorry if someone has to handle this after me haha this is a mess.

#i dont know how workflows work

# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '.\advanced.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets

#other imports
from pathlib import Path
import sys
import queue
import datetime
import logging
#imports of local modules
from modules import setup_functions
from modules import verify_folders
from modules.singlepage_img_rename import single_rename
from modules.doublepage_img_rename import double_rename
from modules.rotate_and_split_image import rotate_and_split_image
from modules.run_tesseract import run_tesseract
from modules.hocr_parser import parse_hocr
from modules.fix_mistakes import regex_corrector
from modules.rewrite_docx import rewrite_docx
from modules.delete_files import delete_irrelevant_files
from modules.functions_ui import open_folder

logger = logging.getLogger(__name__)
logger.setLevel(logging.DEBUG)
formatter = logging.Formatter('%(asctime)s:%(name)s:%(message)s')
file_handler = logging.FileHandler('app.log')
critical_handler = logging.FileHandler('app.log')
file_handler.setLevel(logging.ERROR)
critical_handler.setLevel(logging.CRITICAL)
critical_handler.setFormatter(formatter)
file_handler.setFormatter(formatter)
critical_handler.flush = True
logger.addHandler(file_handler)
logger.addHandler(critical_handler)



class SequentialManager(QtCore.QObject):
    finished = QtCore.pyqtSignal()
    resultsChanged = QtCore.pyqtSignal(QtCore.QByteArray)

    def __init__(self, parent=None):
        super(SequentialManager, self).__init__(parent)
        self.process = QtCore.QProcess(self)
        self.process.finished.connect(self.handleFinished)
        self.process.readyReadStandardOutput.connect(self.onReadyReadStandardOutput)

    def start(self, commands):
        self._commands = iter(commands)
        self.fetchNext()

    def fetchNext(self):
        try:
            command = next(self._commands)
        except StopIteration:
            return False
        else:
            self.process.start(command)
        return True

    def onReadyReadStandardOutput(self):
        result = self.process.readAllStandardOutput()
        self.resultsChanged.emit(result)

    def handleFinished(self):
        if not self.fetchNext():
            self.finished.emit()

class Worker(QtCore.QRunnable):
    '''
    Worker thread
    Inherits from QRunnable to handler worker thread setup, signals and wrap-up.
    :param callback: The function callback to run on this worker thread. Supplied args and
                     kwargs will be passed through to the runner.
    :type callback: function
    :param args: Arguments to pass to the callback function
    :param kwargs: Keywords to pass to the callback function
    '''
    def __init__(self, fn, *args, **kwargs):
        super(Worker, self).__init__()
        # Store constructor arguments (re-used for processing)
        self.fn = fn
        self.args = args
        self.kwargs = kwargs
    @QtCore.pyqtSlot()
    def run(self):
        '''
        Initialise the runner function with passed args, kwargs.
        '''
        self.fn(*self.args, **self.kwargs)

    @QtCore.pyqtSlot()    
    def iterate(self):
        '''
        Iterate the runner function with passed args, kwargs. Takes a list tuples containing functions and arguments in each tuple.
        No args: (function,)
        With args: (function, *args)
        '''
        for fn_args in self.fn:
            fn = fn_args[0]  # Get the function from the tuple
            args = fn_args[1:]  # Get the arguments from the tuple
            fn(*args)  # Call the function with the arguments

class EmittingStream(QtCore.QObject):

    textWritten = QtCore.pyqtSignal(str)

    def write(self, text):
        self.textWritten.emit(str(text))

class Ui_MainWindow(object):
    def __init__(self):
        self.q = queue.Queue()
        self.threadpool = QtCore.QThreadPool()
        self.manager = SequentialManager()
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.gridLayoutWidget_2 = QtWidgets.QWidget(self.centralwidget)
        self.PSM_combobox = QtWidgets.QComboBox(self.gridLayoutWidget_2)


    def start_worker(self, fn, *args, **kwargs):
        worker = Worker(fn, *args, **kwargs)
        self.threadpool.start(worker)
            
        
    #Function calls
    def button_single_rename(self):
        self.PSM_value = self.check_psm_index()
        self.start_worker(single_rename)
    def button_double_rename(self):
        self.start_worker(double_rename)
    def button_rotate_split(self):
        self.start_worker(rotate_and_split_image)
    def button_run_tesseract(self):
        self.PSM_value = self.check_psm_index()
        self.start_worker(run_tesseract, self.PSM_value)
    def button_hocr_parse(self):
        self.start_worker(parse_hocr)
    
    def button_rewrite(self):
        fn_list = [(regex_corrector, ),
        (rewrite_docx, )]
        worker = Worker(fn_list)
        self.start_worker(worker.iterate)
        
    def button_delete(self):
        self.start_worker(delete_irrelevant_files)
    def button_import_folder(self):
        folder = Path('./ImportFolder')
        self.start_worker(open_folder, folder)
    def button_output_folder(self):
        folder = Path('./TesseractOutput')
        self.start_worker(open_folder, folder)
        
    def button_batch_single(self):
        self.PSM_value = self.check_psm_index()
        folder = Path('./TesseractOutput')
        fn_list = [(single_rename, ),
            (run_tesseract, self.PSM_value),
            (parse_hocr, ),
            (regex_corrector, ),
            (rewrite_docx, ),
            (delete_irrelevant_files, ),
            (open_folder, folder)
        ]
        worker = Worker(fn_list)
        self.start_worker(worker.iterate)
        
    def button_batch_double(self):
        self.PSM_value = self.check_psm_index()
        folder = Path('./TesseractOutput')
        fn_list = [(double_rename, ),
            (rotate_and_split_image, ),
            (run_tesseract, self.PSM_value),
            (parse_hocr, ),
            (regex_corrector, ),
            (rewrite_docx, ),
            (delete_irrelevant_files, ),
            (open_folder, folder),
        ]
        worker = Worker(fn_list)
        self.start_worker(worker.iterate)
        
    def button_quit(self):
        QtCore.QCoreApplication.instance().quit()
                
                
    
    def setupUi(self, MainWindow):
        
        sys.stdout = EmittingStream(textWritten=self.normalOutputWritten)
        
        self.threadpool = QtCore.QThreadPool()

        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1217, 762)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(26, 22, 35))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(39, 33, 52))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(32, 27, 43))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(13, 11, 17))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(17, 15, 23))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(26, 22, 35))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(13, 11, 17))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 128))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(26, 22, 35))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(39, 33, 52))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(32, 27, 43))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(13, 11, 17))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(17, 15, 23))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(26, 22, 35))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(13, 11, 17))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 128))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(13, 11, 17))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(26, 22, 35))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(39, 33, 52))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(32, 27, 43))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(13, 11, 17))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(17, 15, 23))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(13, 11, 17))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(13, 11, 17))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(26, 22, 35))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(26, 22, 35))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(26, 22, 35))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 128))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.PlaceholderText, brush)
        MainWindow.setPalette(palette)
        font = QtGui.QFont()
        font.setFamily("Sans-Serif")
        MainWindow.setFont(font)
        MainWindow.setAutoFillBackground(True)
        #CENTRALWIDGET HERE #NO NEED PROBABLY IT SEEMS TO WORK MAN
        self.centralwidget.setObjectName("centralwidget")
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setGeometry(QtCore.QRect(30, 30, 781, 401))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(47, 47, 47))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(70, 70, 70))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(58, 58, 58))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(23, 23, 23))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(31, 31, 31))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(47, 47, 47))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(23, 23, 23))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 128))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(47, 47, 47))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(70, 70, 70))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(58, 58, 58))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(23, 23, 23))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(31, 31, 31))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(47, 47, 47))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(23, 23, 23))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 128))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(23, 23, 23))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(47, 47, 47))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(70, 70, 70))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(58, 58, 58))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(23, 23, 23))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(31, 31, 31))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(23, 23, 23))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(23, 23, 23))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(47, 47, 47))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(47, 47, 47))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(47, 47, 47))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 128))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.PlaceholderText, brush)
        self.frame.setPalette(palette)
        font = QtGui.QFont()
        font.setFamily("Sans-Serif")
        self.frame.setFont(font)
        self.frame.setAutoFillBackground(True)
        self.frame.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.textEdit = QtWidgets.QTextEdit(self.frame)
        self.textEdit.setReadOnly(True)
        self.textEdit.setGeometry(QtCore.QRect(0, 0, 781, 401))
        self.textEdit.setObjectName("textEdit")
        self.gridLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.gridLayoutWidget.setGeometry(QtCore.QRect(1110, 30, 77, 163))
        self.gridLayoutWidget.setObjectName("gridLayoutWidget")
        self.gridLayout = QtWidgets.QGridLayout(self.gridLayoutWidget)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setHorizontalSpacing(140)
        self.gridLayout.setVerticalSpacing(0)
        self.gridLayout.setObjectName("gridLayout")
        self.parsehocr_button = QtWidgets.QPushButton(self.gridLayoutWidget)
        self.parsehocr_button.setObjectName("parsehocr_button")
        self.gridLayout.addWidget(self.parsehocr_button, 4, 1, 1, 1)
        self.rename2page_button = QtWidgets.QPushButton(self.gridLayoutWidget)
        self.rename2page_button.setObjectName("rename2page_button")
        self.gridLayout.addWidget(self.rename2page_button, 1, 1, 1, 1)
        self.reparesedocx_button = QtWidgets.QPushButton(self.gridLayoutWidget)
        self.reparesedocx_button.setObjectName("reparesedocx_button")
        self.gridLayout.addWidget(self.reparesedocx_button, 5, 1, 1, 1)
        self.rotatesplit_button = QtWidgets.QPushButton(self.gridLayoutWidget)
        self.rotatesplit_button.setObjectName("rotatesplit_button")
        self.gridLayout.addWidget(self.rotatesplit_button, 2, 1, 1, 1)
        self.runtesseract_button = QtWidgets.QPushButton(self.gridLayoutWidget)
        self.runtesseract_button.setObjectName("runtesseract_button")
        self.gridLayout.addWidget(self.runtesseract_button, 3, 1, 1, 1)
        self.deletefiles_button = QtWidgets.QPushButton(self.gridLayoutWidget)
        self.deletefiles_button.setObjectName("deletefiles_button")
        self.gridLayout.addWidget(self.deletefiles_button, 6, 1, 1, 1)
        self.rename1page_button = QtWidgets.QPushButton(self.gridLayoutWidget)
        self.rename1page_button.setObjectName("rename1page_button")
        self.gridLayout.addWidget(self.rename1page_button, 0, 1, 1, 1)
        self.verticalLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(840, 30, 271, 161))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.rename1page_label = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.rename1page_label.setObjectName("rename1page_label")
        self.verticalLayout.addWidget(self.rename1page_label)
        self.rename2page_label = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.rename2page_label.setObjectName("rename2page_label")
        self.verticalLayout.addWidget(self.rename2page_label)
        self.rotatesplit_label = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.rotatesplit_label.setObjectName("rotatesplit_label")
        self.verticalLayout.addWidget(self.rotatesplit_label)
        self.runtesseract_label = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.runtesseract_label.setObjectName("runtesseract_label")
        self.verticalLayout.addWidget(self.runtesseract_label)
        self.parsehocr_label = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.parsehocr_label.setObjectName("parsehocr_label")
        self.verticalLayout.addWidget(self.parsehocr_label)
        self.reparesedocx_label = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.reparesedocx_label.setObjectName("reparesedocx_label")
        self.verticalLayout.addWidget(self.reparesedocx_label)
        self.deletefiles_label = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.deletefiles_label.setObjectName("deletefiles_label")
        self.verticalLayout.addWidget(self.deletefiles_label)
        self.verticalLayoutWidget_2 = QtWidgets.QWidget(self.centralwidget)
        self.verticalLayoutWidget_2.setGeometry(QtCore.QRect(570, 440, 241, 261))
        self.verticalLayoutWidget_2.setObjectName("verticalLayoutWidget_2")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_2)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.importfolder_instructions = QtWidgets.QLabel(self.verticalLayoutWidget_2)
        self.importfolder_instructions.setAlignment(QtCore.Qt.AlignCenter)
        self.importfolder_instructions.setWordWrap(True)
        self.importfolder_instructions.setObjectName("importfolder_instructions")
        self.verticalLayout_2.addWidget(self.importfolder_instructions)
        self.importfolder_button = QtWidgets.QPushButton(self.verticalLayoutWidget_2)
        self.importfolder_button.setObjectName("importfolder_button")
        self.verticalLayout_2.addWidget(self.importfolder_button)
        self.outputfolder_instructions = QtWidgets.QLabel(self.verticalLayoutWidget_2)
        self.outputfolder_instructions.setAlignment(QtCore.Qt.AlignCenter)
        self.outputfolder_instructions.setWordWrap(True)
        self.outputfolder_instructions.setObjectName("outputfolder_instructions")
        self.verticalLayout_2.addWidget(self.outputfolder_instructions)
        self.outputfolder_button = QtWidgets.QPushButton(self.verticalLayoutWidget_2)
        self.outputfolder_button.setObjectName("outputfolder_button")
        self.verticalLayout_2.addWidget(self.outputfolder_button)
        self.exit_button = QtWidgets.QPushButton(self.centralwidget)
        self.exit_button.setGeometry(QtCore.QRect(990, 620, 171, 81))
        font = QtGui.QFont()
        font.setFamily("Sans-Serif")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.exit_button.setFont(font)
        self.exit_button.setObjectName("exit_button")
        #GRIDLAYOUT WIDGET 2 HERE #NO NEED PROBABLY IT SEEMS TO WORK MAN
        self.gridLayoutWidget_2.setGeometry(QtCore.QRect(30, 460, 491, 61))
        self.gridLayoutWidget_2.setObjectName("gridLayoutWidget_2")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.gridLayoutWidget_2)
        self.gridLayout_3.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.PSM_label = QtWidgets.QLabel(self.gridLayoutWidget_2)
        self.PSM_label.setObjectName("PSM_label")
        self.gridLayout_3.addWidget(self.PSM_label, 0, 0, 1, 1)
        #PUTCOMBOBOXHEREIFINITFAILS #NO NEED PROBABLY IT SEEMS TO WORK MAN
        self.PSM_combobox.setCurrentText("")
        self.PSM_combobox.setObjectName("PSM_combobox")
        self.gridLayout_3.addWidget(self.PSM_combobox, 0, 1, 1, 1)
        #PUT PSM_COMBOBOX HERE IF INIT FAILS #NO NEED PROBABLY IT SEEMS TO WORK MAN
        self.singlepage_button = QtWidgets.QPushButton(self.centralwidget)
        self.singlepage_button.setGeometry(QtCore.QRect(70, 610, 171, 91))
        self.singlepage_button.setObjectName("singlepage_button")
        self.doublepage_button = QtWidgets.QPushButton(self.centralwidget)
        self.doublepage_button.setGeometry(QtCore.QRect(310, 610, 171, 91))
        self.doublepage_button.setObjectName("doublepage_button")
        self.pic_singlepage = QtWidgets.QLabel(self.centralwidget)
        self.pic_singlepage.setGeometry(QtCore.QRect(870, 350, 161, 71))
        self.pic_singlepage.setText("")
        self.pic_singlepage.setPixmap(QtGui.QPixmap("./app/assets/singlepageexample.png"))
        self.pic_singlepage.setScaledContents(True)
        self.pic_singlepage.setObjectName("pic_singlepage")
        self.instruct_header = QtWidgets.QLabel(self.centralwidget)
        self.instruct_header.setGeometry(QtCore.QRect(870, 190, 211, 51))
        font = QtGui.QFont()
        font.setFamily("Sans-Serif")
        font.setPointSize(12)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.instruct_header.setFont(font)
        self.instruct_header.setAlignment(QtCore.Qt.AlignCenter)
        self.instruct_header.setObjectName("instruct_header")
        self.instructions_singlepage = QtWidgets.QLabel(self.centralwidget)
        self.instructions_singlepage.setGeometry(QtCore.QRect(880, 230, 191, 121))
        self.instructions_singlepage.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignTop)
        self.instructions_singlepage.setWordWrap(True)
        self.instructions_singlepage.setObjectName("instructions_singlepage")
        self.doublepage_image = QtWidgets.QLabel(self.centralwidget)
        self.doublepage_image.setGeometry(QtCore.QRect(900, 500, 121, 81))
        self.doublepage_image.setText("")
        self.doublepage_image.setPixmap(QtGui.QPixmap("./app/assets/doublepageexample.png"))
        self.doublepage_image.setScaledContents(True)
        self.doublepage_image.setObjectName("doublepage_image")
        self.instructions_doublepage = QtWidgets.QLabel(self.centralwidget)
        self.instructions_doublepage.setGeometry(QtCore.QRect(880, 420, 191, 81))
        self.instructions_doublepage.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignTop)
        self.instructions_doublepage.setWordWrap(True)
        self.instructions_doublepage.setObjectName("instructions_doublepage")
        self.instruct_boxes = QtWidgets.QLabel(self.centralwidget)
        self.instruct_boxes.setGeometry(QtCore.QRect(280, 440, 231, 32))
        self.instruct_boxes.setObjectName("instruct_boxes")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1217, 20))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        
        # Button Calls
        
        self.rename1page_button.clicked.connect(self.button_single_rename)
        self.rename2page_button.clicked.connect(self.button_double_rename)
        self.rotatesplit_button.clicked.connect(self.button_rotate_split)
        self.runtesseract_button.clicked.connect(self.button_run_tesseract)
        self.parsehocr_button.clicked.connect(self.button_hocr_parse)
        self.reparesedocx_button.clicked.connect(self.button_rewrite) #different from parsehocr
        self.deletefiles_button.clicked.connect(self.button_delete)
        self.importfolder_button.clicked.connect(self.button_import_folder)
        self.outputfolder_button.clicked.connect(self.button_output_folder)
        self.singlepage_button.clicked.connect(self.button_batch_single)
        self.doublepage_button.clicked.connect(self.button_batch_double)
        self.exit_button.clicked.connect(self.button_quit)
        
        # Combobox items 
        
        self.PSM_combobox.addItem('Default', 3)
        self.PSM_combobox.addItem('Single Column', 4)
        self.PSM_combobox.addItem('Vertical Uniform Block', 5)
        self.PSM_combobox.addItem('Uniform Block', 6)
        self.PSM_combobox.addItem('Single Line', 7)
        self.PSM_combobox.addItem('Single Word', 8)
        self.PSM_combobox.addItem('Single Word in a Circle', 9)
        self.PSM_combobox.addItem('Single Character', 10)
        self.PSM_combobox.addItem('Max amount text in no order', 11)
        self.PSM_combobox.addItem('Raw Single Line', 13)
        self.PSM_combobox.setCurrentIndex(0)
    
    def check_psm_index(self):
        current_index = self.PSM_combobox.currentIndex()
        match current_index:
            case 1:
                index = 4
            case 2:
                index = 5
            case 3:
                index = 6
            case 4:
                index = 7
            case 5:
                index = 8
            case 6:
                index = 9
            case 7:
                index = 10
            case 8:
                index = 11
            case 9:
                index = 13
            case _:
                index = 3
        return index
        

    def __del__(self):
        # Restore sys.stdout
        sys.stdout = sys.__stdout__

    def normalOutputWritten(self, text):
        """Append text to the QTextEdit."""
        # Maybe QTextEdit.append() works as well, but this is how I do it: #thank you stackoverflow-man
        cursor = self.textEdit.textCursor()
        cursor.movePosition(QtGui.QTextCursor.End)
        cursor.insertText(text)
        self.textEdit.setTextCursor(cursor)
        self.textEdit.ensureCursorVisible()

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "OCR Automation"))
        self.parsehocr_button.setText(_translate("MainWindow", "Run"))
        self.rename2page_button.setText(_translate("MainWindow", "Run"))
        self.reparesedocx_button.setText(_translate("MainWindow", "Run"))
        self.rotatesplit_button.setText(_translate("MainWindow", "Run"))
        self.runtesseract_button.setText(_translate("MainWindow", "Run"))
        self.deletefiles_button.setText(_translate("MainWindow", "Run"))
        self.rename1page_button.setText(_translate("MainWindow", "Run"))
        self.rename1page_label.setText(_translate("MainWindow", "Rename and move single-sided images"))
        self.rename2page_label.setText(_translate("MainWindow", "Rename and move double-sided images"))
        self.rotatesplit_label.setText(_translate("MainWindow", "Rotate and split double-sided images"))
        self.runtesseract_label.setText(_translate("MainWindow", "Run Tesseract"))
        self.parsehocr_label.setText(_translate("MainWindow", "Parse hOCR output"))
        self.reparesedocx_label.setText(_translate("MainWindow", "Re-parse .docx file"))
        self.deletefiles_label.setText(_translate("MainWindow", "Delete images and unnecessary files"))
        self.importfolder_instructions.setText(_translate("MainWindow", "This program relies on an import folder. Place all images you want scanned in there. Use the button below to open it."))
        self.importfolder_button.setText(_translate("MainWindow", "Open Import Folder"))
        self.outputfolder_instructions.setText(_translate("MainWindow", "This program should automatically open the output folder once done. Use the button below if it doesn\'t."))
        self.outputfolder_button.setText(_translate("MainWindow", "Open Output Folder"))
        self.exit_button.setText(_translate("MainWindow", "Quit"))
        self.PSM_label.setText(_translate("MainWindow", "Page Segmentation Mode"))
        self.singlepage_button.setText(_translate("MainWindow", "Single Page"))
        self.doublepage_button.setText(_translate("MainWindow", "Double Page"))
        self.instruct_header.setText(_translate("MainWindow", "Basic Instructions:"))
        self.instructions_singlepage.setText(_translate("MainWindow", "Scan your documents as image files (not .pdf). Open the Import Folder and copy your images into it. If each page is its own image like this picture below:\n"
"Press the Single Page button"))
        self.instructions_doublepage.setText(_translate("MainWindow", "If your images have two pages in the same image like the pic below:\n"
"Press the Double Page button\n"
"Orientation doesn\'t matter"))
        self.instruct_boxes.setText(_translate("MainWindow", "Controls how text is read.\nDefault is fine in most cases."))


if __name__ == "__main__":
   
    if not verify_folders.read_folder_flag():
        verify_folders.app_folder_check()
        verify_folders.asset_folder_check()
        verify_folders.scan_folder_check()
        verify_folders.splitter_folder_check()
        verify_folders.tesseract_in_folder_check()
        verify_folders.tesseract_out_folder_check()
        verify_folders.write_folder_flag()
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    try: 
        MainWindow.show()
        if not setup_functions.tessinstall_flag():
            setup_functions.tesspath_create()
            setup_functions.tesseract_instructions()
        if not setup_functions.latdata_flag():
            setup_functions.latdata_download()
        if not setup_functions.swedata_flag():
            setup_functions.swedata_download()
    except Exception as e:
        timestamp = datetime.datetime.now()
        logger.exception(e)
        exception_info = sys.exc_info()
        with open("logs.txt", "a") as f:
            f.write(f'[{timestamp}]: Caught Exception {e}\n')
            f.write(f'Exception Type: {exception_info[0]}\n')
            f.write(f'Exception Value: {exception_info[1]}\n')
            f.write(f'Exception Traceback: {exception_info[2]}\n')
        print(f'[{timestamp}]: Caught Exception {e}')
    sys.exit(app.exec_())